/* === 1. 基本設定とダークテーマ === */
:root {
    /* 1a. ダークテーマのカラーパレット */
    --color-background: #121212;
    --color-surface: #1e1e1e;
    --color-primary: #bb86fc;
    --color-primary-variant: #3700b3;
    --color-secondary: #03dac6;
    --color-on-background: #e0e0e0;
    --color-on-surface: #ffffff;
    --color-on-primary: #000000;
    --color-on-secondary: #000000;
    --color-error: #cf6679;
    --color-border: #333333;
    --color-scrollbar: #424242;
    --color-scrollbar-thumb: #616161;
    --color-overlay: rgba(0, 0, 0, 0.7);
    --color-disabled: #555555;
    --color-disabled-text: #888888;
    --color-fallback-bg: #333;
    --color-fallback-text: #aaa;
    --color-success: #4CAF50;
    --color-progress: var(--color-primary);

    /* 1b. レイアウト変数 (セーフエリア対応) */
    --safe-area-top: env(safe-area-inset-top, 0px);
    --safe-area-bottom: env(safe-area-inset-bottom, 0px);
    --safe-area-left: env(safe-area-inset-left, 0px);
    --safe-area-right: env(safe-area-inset-right, 0px);

    --header-height: 56px;
    --footer-height: 60px;
    
    /* 1c. カードグリッド用 (JSで変更) */
    --grid-columns: 3;
}

/* === 2. グローバルスタイル === */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    -webkit-tap-highlight-color: transparent; /* タップ時のハイライトを無効化 */
}

html, body {
    width: 100%;
    height: 100%;
    overflow: hidden; /* bodyレベルでのスクロールを禁止 */
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    background-color: var(--color-background);
    color: var(--color-on-background);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    
    /* ★ 修正: バウンス（オーバースクロール）の無効化 */
    overscroll-behavior: none;
    position: fixed; /* iOSでのアドレスバー追従を防ぐ */
}

button {
    font-family: inherit;
    background: none;
    border: none;
    cursor: pointer;
    color: inherit;
}

button:disabled {
    cursor: not-allowed;
    color: var(--color-disabled-text);
}

input[type="search"] {
    font-family: inherit;
    font-size: 16px;
    border-radius: 8px;
    border: 1px solid var(--color-border);
    background-color: var(--color-surface);
    color: var(--color-on-surface);
    padding: 8px 12px;
    flex-grow: 1;
    -webkit-appearance: none; /* iOSでのデフォルトスタイル解除 */
}
input[type="search"]::-webkit-search-cancel-button {
    -webkit-appearance: none;
    display: none;
}

/* === 3. アプリケーションレイアウト === */
.app-container {
    /* ★ 修正: flexレイアウトから position: fixed ベースのレイアウトに変更 */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-background);
    
    /* ★ 修正: セーフエリアを .app-container の padding として一元管理 */
    padding-top: var(--safe-area-top);
    padding-bottom: var(--safe-area-bottom);
    padding-left: var(--safe-area-left);
    padding-right: var(--safe-area-right);
}

/* 3a. ヘッダー */
.app-header {
    /* ★ 修正: position: fixed に変更 */
    position: fixed;
    top: var(--safe-area-top); /* 親のpadding(safe-area)の内側に配置 */
    left: var(--safe-area-left);
    right: var(--safe-area-right);
    
    height: var(--header-height); /* ヘッダー自体の高さは固定 */
    background-color: var(--color-surface);
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    z-index: 10;
    
    /* ★ 修正: padding-top は .header-content に移動 */
}

.header-content {
    display: flex;
    align-items: center;
    gap: 12px;
    height: var(--header-height);
    padding: 0 12px;
    /* ★ 修正: セーフエリアのpaddingは親(.app-header)が持つ */
}

.search-bar-container {
    display: flex;
    flex-grow: 1;
    position: relative;
}

.clear-search-btn {
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 20px;
    color: var(--color-disabled-text);
    padding: 0 4px;
    display: none; /* JSで表示制御 */
}

.header-btn {
    color: var(--color-on-surface);
    padding: 8px;
    border-radius: 50%;
}
.header-btn:hover {
    background-color: rgba(255,255,255,0.1);
}

/* 3b. メインコンテンツ (スクロールエリア) */
.main-content {
    /* ★ 修正: position: absolute でヘッダーとフッターの間の領域を確保 */
    position: absolute;
    top: var(--header-height); /* ヘッダーの高さ分、上から離す */
    bottom: var(--footer-height); /* フッターの高さ分、下から離す */
    left: 0;
    right: 0;
    
    overflow-y: auto; /* ここだけスクロール */
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch; /* iOSでの慣性スクロール */
    
    /* ★ 修正: バウンス（オーバースクロール）の伝播を防止 */
    overscroll-behavior-y: contain;

    /* ★ 修正: paddingはセーフエリアを考慮しない (親が担当) */
    padding: 8px;
}

/* 3c. フッター */
.app-footer {
    /* ★ 修正: position: fixed に変更 */
    position: fixed;
    bottom: var(--safe-area-bottom); /* 親のpadding(safe-area)の内側に配置 */
    left: var(--safe-area-left);
    right: var(--safe-area-right);
    
    width: auto; /* fixedにしたのでwidthを自動に */
    height: var(--footer-height); /* フッター自体の高さは固定 */
    background-color: var(--color-surface);
    box-shadow: 0 -2px 5px rgba(0,0,0,0.2);
    z-index: 10;
    
    /* ★ 修正: padding-bottom のセーフエリア指定を削除 (親が担当) */
}

.footer-nav {
    display: flex;
    justify-content: space-around;
    align-items: stretch;
    height: var(--footer-height);
    /* ★ 修正: セーフエリアのpaddingは親(.app-footer)が持つ */
}

.nav-btn {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    flex-grow: 1;
    font-size: 12px;
    color: var(--color-disabled-text);
    transition: color 0.2s;
    padding-top: 8px;
    position: relative;
}
.nav-btn svg {
    margin-bottom: 4px;
}
.nav-btn.active {
    color: var(--color-primary);
}
.nav-btn:not(:disabled):hover {
    color: var(--color-on-surface);
}

/* 列数切り替えボタンのスタイル */
.nav-btn span {
    font-size: 12px;
}
.nav-btn span.column-count-display {
    position: absolute;
    top: 20px;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 14px;
    font-weight: bold;
    color: currentColor;
    pointer-events: none;
}
#column-toggle-btn {
    color: var(--color-primary);
}
#column-toggle-btn:hover {
     color: var(--color-on-surface);
}


/* === 4. カード一覧 === */
.card-list-container {
    display: grid;
    grid-template-columns: repeat(var(--grid-columns), 1fr);
    gap: 0;
}

.card-item {
    width: 100%;
    aspect-ratio: 70 / 98;
    overflow: hidden;
    background-color: var(--color-surface);
    cursor: pointer;
}

.card-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}

.card-fallback {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    background-color: var(--color-fallback-bg);
    color: var(--color-fallback-text);
    font-size: 12px;
    font-weight: bold;
    padding: 8px;
    word-break: break-all;
}

.no-results {
    padding: 40px 20px;
    text-align: center;
    color: var(--color-on-background);
    grid-column: 1 / -1; /* 全列にまたがる */
}

/* === 5. ローディングインジケータ === */
.loading-indicator {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 40px;
    color: var(--color-on-background);
    /* ★ 修正: メインコンテンツ内で中央に来るように */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.spinner {
    border: 4px solid var(--color-border);
    border-top: 4px solid var(--color-primary);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    animation: spin 1s linear infinite;
    margin-bottom: 16px;
}
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* === 6. モーダル (汎用) === */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-overlay);
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
    animation: fadeIn 0.2s ease-out;
}

/* モーダルのラッパー (セーフエリア対応) */
.modal-content-wrapper {
    width: 100%;
    max-width: 600px;
    margin: 16px;
    /* ★ 修正: セーフエリアマージンを一元管理 */
    margin-top: calc(16px + var(--safe-area-top));
    margin-bottom: calc(16px + var(--safe-area-bottom));
    margin-left: calc(16px + var(--safe-area-left));
    margin-right: calc(16px + var(--safe-area-right));
}

.modal-content {
    background-color: var(--color-surface);
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.5);
    display: flex;
    flex-direction: column;
    /* ★ 修正: モーダルの最大高さをラッパー基準に変更 */
    max-height: calc(100vh - (16px + var(--safe-area-top)) - (16px + var(--safe-area-bottom)));
    animation: slideIn 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px 20px;
    border-bottom: 1px solid var(--color-border);
    flex-shrink: 0;
}
.modal-header h2 {
    color: var(--color-on-surface);
    font-size: 20px;
}

.modal-close-btn {
    font-size: 28px;
    font-weight: 300;
    color: var(--color-on-surface);
    line-height: 1;
    padding: 4px;
}

.modal-body {
    padding: 20px;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    /* ★ 修正: バウンス防止 */
    overscroll-behavior-y: contain;
}

.modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    padding: 16px 20px;
    border-top: 1px solid var(--color-border);
    flex-shrink: 0;
}

/* === 7. モーダルボタン === */
.modal-btn {
    font-size: 16px;
    font-weight: 500;
    padding: 10px 16px;
    border-radius: 8px;
    transition: background-color 0.2s, box-shadow 0.2s;
}
.modal-btn-primary {
    background-color: var(--color-primary);
    color: var(--color-on-primary);
}
.modal-btn-primary:hover {
    background-color: var(--color-primary-variant);
    box-shadow: 0 2px 8px rgba(0,0,0,0.3);
}
.modal-btn-secondary {
    background-color: var(--color-border);
    color: var(--color-on-background);
}
.modal-btn-secondary:hover {
    background-color: #444;
}
.modal-btn-danger {
    background-color: var(--color-error);
    color: var(--color-on-primary);
}
.modal-btn-danger:hover {
    background-color: #b00020;
}


/* === 8. フィルタモーダル特有 === */
.filter-options-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 24px;
}

.filter-group {
    border: none;
    padding: 0;
    margin: 0;
}
.filter-group legend {
    font-size: 16px;
    font-weight: 600;
    color: var(--color-on-surface);
    margin-bottom: 12px;
    padding: 0;
}

.filter-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 10px;
}

.filter-grid.colors {
    grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
}
.filter-grid.costs {
    grid-template-columns: repeat(auto-fill, minmax(40px, 1fr));
}
.filter-grid.types {
     grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
}
.filter-grid.rarities {
     grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
}
.filter-grid.attributes {
     grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
}


.filter-checkbox-label {
    display: block;
    position: relative;
    cursor: pointer;
}

.filter-checkbox {
    /* チェックボックス本体を隠す */
    opacity: 0;
    position: absolute;
    width: 0;
    height: 0;
}

.filter-checkbox-ui {
    display: block;
    padding: 8px 12px;
    border: 1px solid var(--color-border);
    background-color: var(--color-background);
    color: var(--color-on-background);
    border-radius: 8px;
    text-align: center;
    font-size: 14px;
    transition: background-color 0.2s, border-color 0.2s, box-shadow 0.2s;
    user-select: none;
}

/* 色フィルタの特別なスタイル */
.filter-checkbox-label[data-color="Red"] .filter-checkbox-ui { border-color: #D32F2F; }
.filter-checkbox-label[data-color="Green"] .filter-checkbox-ui { border-color: #388E3C; }
.filter-checkbox-label[data-color="Blue"] .filter-checkbox-ui { border-color: #1976D2; }
.filter-checkbox-label[data-color="Purple"] .filter-checkbox-ui { border-color: #7B1FA2; }
.filter-checkbox-label[data-color="Black"] .filter-checkbox-ui { border-color: #616161; }
.filter-checkbox-label[data-color="Yellow"] .filter-checkbox-ui { border-color: #FBC02D; }

/* チェックされた時のスタイル */
.filter-checkbox:checked + .filter-checkbox-ui {
    background-color: var(--color-primary);
    color: var(--color-on-primary);
    border-color: var(--color-primary);
    box-shadow: 0 0 8px var(--color-primary);
}
/* 色フィルタのチェック時 */
.filter-checkbox:checked + .filter-checkbox-ui[data-color="Red"] { background-color: #D32F2F; border-color: #D32F2F; color: #fff; box-shadow: 0 0 8px #D32F2F; }
.filter-checkbox:checked + .filter-checkbox-ui[data-color="Green"] { background-color: #388E3C; border-color: #388E3C; color: #fff; box-shadow: 0 0 8px #388E3C; }
.filter-checkbox:checked + .filter-checkbox-ui[data-color="Blue"] { background-color: #1976D2; border-color: #1976D2; color: #fff; box-shadow: 0 0 8px #1976D2; }
.filter-checkbox:checked + .filter-checkbox-ui[data-color="Purple"] { background-color: #7B1FA2; border-color: #7B1FA2; color: #fff; box-shadow: 0 0 8px #7B1FA2; }
.filter-checkbox:checked + .filter-checkbox-ui[data-color="Black"] { background-color: #424242; border-color: #616161; color: #fff; box-shadow: 0 0 8px #616161; }
.filter-checkbox:checked + .filter-checkbox-ui[data-color="Yellow"] { background-color: #FBC02D; border-color: #FBC02D; color: #000; box-shadow: 0 0 8px #FBC02D; }


/* シリーズ (Select) */
.filter-select {
    width: 100%;
    font-size: 16px;
    padding: 10px;
    border-radius: 8px;
    border: 1px solid var(--color-border);
    background-color: var(--color-background);
    color: var(--color-on-background);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23e0e0e0'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 24px;
}
.filter-select:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 8px var(--color-primary);
}


/* === 9. 設定モーダル特有 === */
.settings-group {
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: 16px;
    margin-bottom: 24px;
}
.settings-group legend {
    font-size: 16px;
    font-weight: 600;
    color: var(--color-on-surface);
    padding: 0 8px;
    margin-left: 8px;
}
.setting-item {
    padding: 12px 0;
}
.setting-item + .setting-item {
    border-top: 1px solid var(--color-border);
}
.setting-item p {
    font-size: 14px;
    line-height: 1.5;
    margin-bottom: 12px;
}
.setting-item .modal-btn {
    width: 100%;
}

.app-version {
    text-align: center;
    font-size: 12px;
    color: var(--color-disabled-text);
    padding-top: 16px;
}

/* === 10. ライトボックス (画像拡大) === */
.lightbox-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-overlay);
    z-index: 2000;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: zoom-out;
    animation: fadeIn 0.2s ease-out;
    /* ★ 修正: セーフエリアを padding として適用 */
    padding-top: var(--safe-area-top);
    padding-bottom: var(--safe-area-bottom);
    padding-left: var(--safe-area-left);
    padding-right: var(--safe-area-right);
}

.lightbox-close-btn {
    position: absolute;
    /* ★ 修正: セーフエリアを考慮 (親の padding に合わせる) */
    top: calc(16px + var(--safe-area-top));
    right: calc(16px + var(--safe-area-right));
    font-size: 36px;
    font-weight: 300;
    color: #fff;
    cursor: pointer;
    line-height: 1;
    z-index: 2002;
    padding: 8px;
}

.lightbox-image, .lightbox-fallback {
    /* ★ 修正: 画面全体 (パディングの内側) に収まるように */
    max-width: 100%;
    max-height: 100%;
    border-radius: 12px;
    box-shadow: 0 10px 40px rgba(0,0,0,0.7);
    animation: slideIn 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);
    z-index: 2001;
}
.lightbox-fallback {
    /* ★ 修正: サイズを可変に */
    width: 70vmin;
    height: 98vmin;
    max-width: 100%;
    max-height: 100%;

    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    background-color: var(--color-fallback-bg);
    color: var(--color-fallback-text);
    font-size: 24px;
    font-weight: bold;
    padding: 20px;
    word-break: break-all;
}


/* === 11. 通知トースト === */
#notification-area {
    position: fixed;
    /* ★ 修正: セーフエリアは親(.app-container)が持つため、ここでは考慮しない */
    bottom: calc(var(--footer-height) + 12px);
    left: 50%;
    transform: translateX(-50%);
    z-index: 900;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    width: 90%;
    max-width: 500px;
    /* ★ 修正: セーフエリアのマージンを削除 (親が担当) */
}

.notification-toast {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    background-color: var(--color-on-surface);
    color: var(--color-background);
    padding: 12px 16px;
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    animation: slideUp 0.3s ease-out;
    display: none; /* JSで制御 */
}
/* トーストのタイプ別スタイル */
.notification-toast.info {
    background-color: var(--color-primary-variant);
    color: var(--color-on-background);
}
.notification-toast.success {
    background-color: var(--color-success);
    color: var(--color-on-primary);
}
.notification-toast.error {
    background-color: var(--color-error);
    color: var(--color-on-primary);
}

.notification-toast p {
    font-weight: 500;
    margin-right: 12px;
}
.notification-toast button {
    font-weight: 600;
    color: var(--color-primary); /* デフォルトはPrimary */
    padding: 4px 8px;
    border-radius: 4px;
    margin-left: 8px;
    flex-shrink: 0;
}
/* トーストのタイプに応じてボタン色を変更 */
.notification-toast.info button { color: var(--color-secondary); }
.notification-toast.success button { color: var(--color-on-primary); }
.notification-toast.error button { color: var(--color-on-primary); }

.notification-toast button:hover {
    background-color: rgba(0,0,0,0.1);
}
.notification-toast.info button:hover {
    background-color: rgba(255,255,255,0.1);
}
.notification-toast .dismiss-btn {
    font-size: 20px;
    color: currentColor; /* 親の色を継承 */
    opacity: 0.7;
    padding: 0 4px;
    background: none !important;
}

/* === 12. 進捗バー === */
.cache-progress-container {
    /* ★ 修正: ヘッダー内の進捗バー */
    width: 100%;
    height: 4px;
    background-color: var(--color-border);
    display: none; /* JSで表示 */
    position: absolute;
    bottom: 0; /* ヘッダーの最下部 */
    left: 0;
    right: 0; /* ★ 修正: right: 0 を追加 */
}
.cache-progress-bar {
    width: 0; /* JSで制御 */
    height: 100%;
    background-color: var(--color-progress);
    border-radius: 0;
    transition: width 0.1s linear;
}
.cache-progress-text {
    /* ★ 修正: 進捗テキストは非表示 (バーのみ) */
    display: none;
}
/* JSで display: none がインラインスタイルで設定された場合も確実に隠す */
#cache-progress-container[style*="display: none;"] {
    display: none !important;
}


/* === 13. アニメーション === */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}
@keyframes slideIn {
    from { transform: translateY(30px) scale(0.95); opacity: 0; }
    to { transform: translateY(0) scale(1); opacity: 1; }
}
@keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

